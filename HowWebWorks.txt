//part one

1. What is HTTP?
HTTP is a protocol for fetching resources such as HTML documents. It is the foundation of any data exchange on the Web and it is a client-server protocol, which means requests are initiated by the recipient, usually the Web browser. ... HTTP can also be used to fetch parts of documents to update Web pages on demand.

2. What is a URL?
URL stands for Uniform Resource Locator. A URL is nothing more than the address of a given unique resource on the Web.

3. What is DNS?
The Domain Name System (DNS) is the phonebook of the Internet. Humans access information online through domain names, like nytimes.com or espn.com.

4. What is a query string?
A query string is a part of a uniform resource locator (URL) that assigns values to specified parameters.

5. What are two HTTP verbs and how are they different?
The GET method requests a representation of the specified resource. Requests using GET should only retrieve data.
The POST method submits an entity to the specified resource, often causing a change in state or side effects on the server.

6. What is an HTTP request?
An HTTP request is made by a client, to a named host, which is located on a server. The aim of the request is to access a resource on the server.

7. What is an HTTP response?
An HTTP response is made by a server to a client. The aim of the response is to provide the client with the resource it requested, or inform the client that the action it requested has been carried out; or else to inform the client that an error occurred in processing its request.

8. What is an HTTP header? Give a couple examples of request and response headers you have seen.
HTTP headers let the client and the server pass additional information with an HTTP request or response. An HTTP header consists of its case-insensitive name followed by a colon (:), then by its value.
Request headers: Host, User-Agent, Accept, Cookie, Cache-Control
Response headers: Content-Type, Last-Modified, Set-Cookie, Cache-Control

9. What are the processes that happen when you type “http://somesite.com/some/page.html” into a browser?
Your browser “resolves” the name into an IP address using DNS
Your browser makes a request to that IP address, including headers (info about browser, any previous cookies, and other things)
The server sends a response (typically, HTML, with a status code (200 if it was sucessful)
The browser makes a DOM from that HTML, and finds any other resources needed (images, CSS, JavaScript, etc)
The browser makes separate HTTP requests for those resources and receives response from the server for each


